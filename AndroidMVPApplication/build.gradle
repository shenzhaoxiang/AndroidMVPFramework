// 代表该项目是Android项目
apply plugin: 'com.android.application'

android {
    // 编译SDK版本
    compileSdkVersion 24
    // build tools 版本
    buildToolsVersion "24.0.1"

    defaultConfig {
        // 应用包名
        applicationId "com.ctsig.android"
        // 最小支持的SDk版本
        minSdkVersion 14
        // 目标SDK版本
        targetSdkVersion 24
        // 版本号 versionCode = x * 10000 + y * 100 + z 的格式命名
        versionCode 10000
        // 版本名字 versionName = x.y.z, 且 x.y.z 都为数字
        // x -> 主版本号，无上限
        // y -> 小功能版本号，上限 99(可以根据实际情况调整)
        // z -> 修订版本号（修复BUG），上限 99(可以根据实际情况调整)
        versionName "1.0.0"
    }

    signingConfigs {
        debug {
            // No config
        }
        release {
            // 签名的一些信息
            storeFile file("../BuildSystemConfig/ctsig-release.jks")
            storePassword "ctsig2015"
            keyAlias "ctsig2015"
            keyPassword "ctsig2015"
        }
    }

    // buildTypes意为编译的类型，下面声明了debug和release两种类型
    // 两种的签名所用的配置不一样,在signingConfig节点指定
    // 执行gradlew assembleDehug或者gradlew assembleRelease
    buildTypes {
        debug {
            // 版本名加上后缀 如 1.0-debug
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            // DEBUG发布使用的变量
            debuggable true
            buildConfigField 'boolean', 'TEST', 'true'
            buildConfigField 'String', 'API_URL', '"http://www.shen.com/test/api"'
        }

        release {
            // 是否开启混淆
            minifyEnabled true
            // 是否zip优化
            zipAlignEnabled true
            // 删除一些无用的资源
            shrinkResources true
            // 签名所用的配置文件
            signingConfig signingConfigs.release
            // 混淆所用的文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 正式发布使用的变量
            debuggable false
            buildConfigField 'boolean', 'TEST', 'false'
            buildConfigField 'String', 'API_URL', '"http://www.shen.com/api"'

            // 使生成的安装包名字变成rootprojectname + versionName + versionCode
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(
                            output.outputFile.parent,
                            "$rootProject.name-v${variant.versionName}-build${variant.versionCode}.apk")
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.0'
}
